//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4971
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// -------------------------------------------------------------
//             Created By： Administrator
//             Created Time： 2012/12/31 12:29:19
// -------------------------------------------------------------
namespace BusinessEntity
{
    using System;
    using System.Collections;
    using System.Data;
    using PersistenceLayer;
    
    
    /// <summary>
    /// 实体system_role_menuEntity，对应表system_role_menu
    /// </summary>
    [Serializable()]
    public sealed class system_role_menuEntity : EntityObject
    {
        
        /// <summary>
        /// 对应表字段AutoID
        /// </summary>
        private int m_AutoID = 0;
        
        /// <summary>
        /// 对应表字段RoleID
        /// </summary>
        private int m_RoleID = 0;
        
        /// <summary>
        /// 对应表字段MenuID
        /// </summary>
        private int m_MenuID = 0;
        
        /// <summary>
        /// 对应表字段CustomerID
        /// </summary>
        private int m_CustomerID = 0;
        
        /// <summary>
        /// 对应表字段IsShowMenu
        /// </summary>
        private byte m_IsShowMenu = 0;
        
        /// <summary>
        /// 对应表字段IsPurview
        /// </summary>
        private byte m_IsPurview = 0;
        
        /// <summary>
        /// 对应表字段IsAdd
        /// </summary>
        private byte m_IsAdd = 0;
        
        /// <summary>
        /// 对应表字段IsView
        /// </summary>
        private byte m_IsView = 0;
        
        /// <summary>
        /// 对应表字段IsEdit
        /// </summary>
        private byte m_IsEdit = 0;
        
        /// <summary>
        /// 对应表字段IsDelete
        /// </summary>
        private byte m_IsDelete = 0;
        
        
        /// <summary>
        /// 对应表字段CreatorID
        /// </summary>
        private int m_CreatorID = 0;
        
        /// <summary>
        /// 对应表字段CreateDate
        /// </summary>
        private System.DateTime m_CreateDate = DateTime.MinValue;
        
        /// <summary>
        /// 对应表字段Modifier
        /// </summary>
        private int m_Modifier = 0;
        
        /// <summary>
        /// 对应表字段ModifyDate
        /// </summary>
        private System.DateTime m_ModifyDate = DateTime.MinValue;
        
        /// <summary>
        /// 默认构造函数
        /// </summary>
        public system_role_menuEntity()
        {
        }
        
        /// <summary>
        /// 属性AutoID，对应数据库字段AutoID
        /// </summary>
        public int AutoID
        {
            get
            {
                return this.m_AutoID;
            }
            set
            {
                this.m_AutoID = value;
            }
        }
        
        /// <summary>
        /// 属性RoleID，对应数据库字段RoleID
        /// </summary>
        public int RoleID
        {
            get
            {
                return this.m_RoleID;
            }
            set
            {
                this.m_RoleID = value;
            }
        }
        
        /// <summary>
        /// 属性MenuID，对应数据库字段MenuID
        /// </summary>
        public int MenuID
        {
            get
            {
                return this.m_MenuID;
            }
            set
            {
                this.m_MenuID = value;
            }
        }
        
        /// <summary>
        /// 属性CustomerID，对应数据库字段CustomerID
        /// </summary>
        public int CustomerID
        {
            get
            {
                return this.m_CustomerID;
            }
            set
            {
                this.m_CustomerID = value;
            }
        }
        
        /// <summary>
        /// 属性IsShowMenu，对应数据库字段IsShowMenu
        /// </summary>
        public byte IsShowMenu
        {
            get
            {
                return this.m_IsShowMenu;
            }
            set
            {
                this.m_IsShowMenu = value;
            }
        }
        
        /// <summary>
        /// 属性IsPurview，对应数据库字段IsPurview
        /// </summary>
        public byte IsPurview
        {
            get
            {
                return this.m_IsPurview;
            }
            set
            {
                this.m_IsPurview = value;
            }
        }
        
        /// <summary>
        /// 属性IsAdd，对应数据库字段IsAdd
        /// </summary>
        public byte IsAdd
        {
            get
            {
                return this.m_IsAdd;
            }
            set
            {
                this.m_IsAdd = value;
            }
        }
        
        /// <summary>
        /// 属性IsView，对应数据库字段IsView
        /// </summary>
        public byte IsView
        {
            get
            {
                return this.m_IsView;
            }
            set
            {
                this.m_IsView = value;
            }
        }
        
        /// <summary>
        /// 属性IsEdit，对应数据库字段IsEdit
        /// </summary>
        public byte IsEdit
        {
            get
            {
                return this.m_IsEdit;
            }
            set
            {
                this.m_IsEdit = value;
            }
        }
        
        /// <summary>
        /// 属性IsDelete，对应数据库字段IsDelete
        /// </summary>
        public byte IsDelete
        {
            get
            {
                return this.m_IsDelete;
            }
            set
            {
                this.m_IsDelete = value;
            }
        }
       
        /// <summary>
        /// 属性CreatorID，对应数据库字段CreatorID
        /// </summary>
        public int CreatorID
        {
            get
            {
                return this.m_CreatorID;
            }
            set
            {
                this.m_CreatorID = value;
            }
        }
        
        /// <summary>
        /// 属性CreateDate，对应数据库字段CreateDate
        /// </summary>
        public System.DateTime CreateDate
        {
            get
            {
                return this.m_CreateDate;
            }
            set
            {
                this.m_CreateDate = value;
            }
        }
        
        /// <summary>
        /// 属性Modifier，对应数据库字段Modifier
        /// </summary>
        public int Modifier
        {
            get
            {
                return this.m_Modifier;
            }
            set
            {
                this.m_Modifier = value;
            }
        }
        
        /// <summary>
        /// 属性ModifyDate，对应数据库字段ModifyDate
        /// </summary>
        public System.DateTime ModifyDate
        {
            get
            {
                return this.m_ModifyDate;
            }
            set
            {
                this.m_ModifyDate = value;
            }
        }
        
        /// <summary>
        /// 静态方法，根据主键来获取实体,如果没有获取到则返回null
        /// </summary>
        public static system_role_menuEntity GetEntityByPrimaryKey(int AutoID)
        {
            system_role_menuEntity obj = new system_role_menuEntity();
            obj.AutoID=AutoID;
            obj.Retrieve();
            if (obj.IsPersistent)
            {
                return obj;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// 重新OnEuqal方法，通过主键来判断
        /// </summary>
        public override bool Equals(object obj)
        {
            if ((obj == null) || !(obj is system_role_menuEntity))
            {
                return false;
            }
            system_role_menuEntity tmpObj = (system_role_menuEntity)obj;
            if ((this.m_AutoID == tmpObj.m_AutoID))
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        
        /// <summary>
        /// 重新GetHashCode方法，主键的Hash值累积
        /// </summary>
        public override int GetHashCode()
        {
             return this.m_AutoID.GetHashCode();
        }
        
        /// <summary>
        /// 表字段结构，封装了实体对应数据表的所有字段
        /// </summary>
        public struct Columns
        {
            
            /// <summary>
            /// 表字段AutoID
            /// </summary>
            public const string AutoID = "AutoID";
            
            /// <summary>
            /// 表字段RoleID
            /// </summary>
            public const string RoleID = "RoleID";
            
            /// <summary>
            /// 表字段MenuID
            /// </summary>
            public const string MenuID = "MenuID";
            
            /// <summary>
            /// 表字段CustomerID
            /// </summary>
            public const string CustomerID = "CustomerID";
            
            /// <summary>
            /// 表字段IsShowMenu
            /// </summary>
            public const string IsShowMenu = "IsShowMenu";
            
            /// <summary>
            /// 表字段IsPurview
            /// </summary>
            public const string IsPurview = "IsPurview";
            
            /// <summary>
            /// 表字段IsAdd
            /// </summary>
            public const string IsAdd = "IsAdd";
            
            /// <summary>
            /// 表字段IsView
            /// </summary>
            public const string IsView = "IsView";
            
            /// <summary>
            /// 表字段IsEdit
            /// </summary>
            public const string IsEdit = "IsEdit";
            
            /// <summary>
            /// 表字段IsDelete
            /// </summary>
            public const string IsDelete = "IsDelete";
            
            /// <summary>
            /// 表字段CreatorID
            /// </summary>
            public const string CreatorID = "CreatorID";
            
            /// <summary>
            /// 表字段CreateDate
            /// </summary>
            public const string CreateDate = "CreateDate";
            
            /// <summary>
            /// 表字段Modifier
            /// </summary>
            public const string Modifier = "Modifier";
            
            /// <summary>
            /// 表字段ModifyDate
            /// </summary>
            public const string ModifyDate = "ModifyDate";
        }
    }
}
