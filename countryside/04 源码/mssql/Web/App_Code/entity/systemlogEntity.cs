//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4971
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// -------------------------------------------------------------
//             Created By： Administrator
//             Created Time： 2012/12/31 12:29:19
// -------------------------------------------------------------
namespace BusinessEntity
{
    using System;
    using System.Collections;
    using System.Data;
    using PersistenceLayer;
    
    
    /// <summary>
    /// 实体systemlogEntity，对应表systemlog
    /// </summary>
    [Serializable()]
    public sealed class systemlogEntity : EntityObject
    {
        
        /// <summary>
        /// 对应表字段ID
        /// </summary>
        private int m_AutoID = 0;
        
        /// <summary>
        /// 对应表字段datetime
        /// </summary>
        private System.DateTime m_datetime = DateTime.MinValue;
        
        /// <summary>
        /// 对应表字段loginfo
        /// </summary>
        private string m_loginfo = string.Empty;
        
        /// <summary>
        /// 对应表字段Particular
        /// </summary>
        private string m_Particular = string.Empty;
        
        /// <summary>
        /// 默认构造函数
        /// </summary>
        public systemlogEntity()
        {
        }
        
        /// <summary>
        /// 属性ID，对应数据库字段ID
        /// </summary>
        public int AutoID
        {
            get
            {
                return this.m_AutoID;
            }
            set
            {
                this.m_AutoID = value;
            }
        }
        
        /// <summary>
        /// 属性datetime，对应数据库字段datetime
        /// </summary>
        public System.DateTime datetime
        {
            get
            {
                return this.m_datetime;
            }
            set
            {
                this.m_datetime = value;
            }
        }
        
        /// <summary>
        /// 属性loginfo，对应数据库字段loginfo
        /// </summary>
        public string loginfo
        {
            get
            {
                return this.m_loginfo;
            }
            set
            {
                this.m_loginfo = value;
            }
        }
        
        /// <summary>
        /// 属性Particular，对应数据库字段Particular
        /// </summary>
        public string Particular
        {
            get
            {
                return this.m_Particular;
            }
            set
            {
                this.m_Particular = value;
            }
        }
        
        /// <summary>
        /// 静态方法，根据主键来获取实体,如果没有获取到则返回null
        /// </summary>
        public static systemlogEntity GetEntityByPrimaryKey()
        {
            systemlogEntity obj = new systemlogEntity();
            obj.Retrieve();
            if (obj.IsPersistent)
            {
                return obj;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// 重新OnEuqal方法，通过主键来判断
        /// </summary>
        public override bool Equals(object obj)
        {
            if ((obj == null) || !(obj is systemlogEntity))
            {
                return false;
            }
            systemlogEntity tmpObj = (systemlogEntity)obj;
            return false;
        }
        
        /// <summary>
        /// 重新GetHashCode方法，主键的Hash值累积
        /// </summary>
        public override int GetHashCode()
        {
             return base.GetHashCode();
        }
        
        /// <summary>
        /// 表字段结构，封装了实体对应数据表的所有字段
        /// </summary>
        public struct Columns
        {
            
            /// <summary>
            /// 表字段ID
            /// </summary>
            public const string AutoID = "AutoID";
            
            /// <summary>
            /// 表字段datetime
            /// </summary>
            public const string datetime = "datetime";
            
            /// <summary>
            /// 表字段loginfo
            /// </summary>
            public const string loginfo = "loginfo";
            
            /// <summary>
            /// 表字段Particular
            /// </summary>
            public const string Particular = "Particular";
        }
    }
}
