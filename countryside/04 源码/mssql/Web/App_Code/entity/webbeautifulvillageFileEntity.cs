//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5472
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// -------------------------------------------------------------
//             Created By： thinkpad
//             Created Time： 2013/8/7 13:41:19
// -------------------------------------------------------------
namespace BusinessEntity
{
    using System;
    using System.Collections;
    using System.Data;
    using PersistenceLayer;
    
    
    /// <summary>
    /// 实体webbeautifulvillageFileEntity，对应表webbeautifulvillageFile
    /// </summary>
    [Serializable()]
    public sealed class webbeautifulvillageFileEntity : EntityObject
    {
        
        /// <summary>
        /// 对应表字段AutoID
        /// </summary>
        private int m_AutoID = 0;
        
        /// <summary>
        /// 对应表字段Title
        /// </summary>
        private string m_Title = string.Empty;
        
        /// <summary>
        /// 对应表字段CustomerID
        /// </summary>
        private int m_CustomerID = 0;
        
        /// <summary>
        /// 对应表字段TownID
        /// </summary>
        private int m_TownID = 0;
        
        /// <summary>
        /// 对应表字段VillageID
        /// </summary>
        private int m_VillageID = 0;
        
        /// <summary>
        /// 对应表字段Status
        /// </summary>
        private int m_Status = 0;
        
        /// <summary>
        /// 对应表字段FileType
        /// </summary>
        private string m_FileType = string.Empty;
        
        /// <summary>
        /// 对应表字段FileUrl
        /// </summary>
        private string m_FileUrl = string.Empty;
        private string m_FileSUrl = string.Empty;
        private string m_LinkUrl = string.Empty;
        /// <summary>
        /// 对应表字段FileRmark
        /// </summary>
        private string m_FileRmark = string.Empty;
        
        /// <summary>
        /// 对应表字段OrderValue
        /// </summary>
        private int m_OrderValue = 0;
        
        /// <summary>
        /// 对应表字段CreatorID
        /// </summary>
        private int m_CreatorID = 0;
        
        /// <summary>
        /// 对应表字段CreateDate
        /// </summary>
        private System.DateTime m_CreateDate = DateTime.MinValue;
        
        /// <summary>
        /// 对应表字段Modifier
        /// </summary>
        private int m_Modifier = 0;
        
        /// <summary>
        /// 对应表字段ModifyDate
        /// </summary>
        private System.DateTime m_ModifyDate = DateTime.MinValue;
        
        /// <summary>
        /// 默认构造函数
        /// </summary>
        public webbeautifulvillageFileEntity()
        {
        }
        
        /// <summary>
        /// 属性AutoID，对应数据库字段AutoID
        /// </summary>
        public int AutoID
        {
            get
            {
                return this.m_AutoID;
            }
            set
            {
                this.m_AutoID = value;
            }
        }
        
        /// <summary>
        /// 属性Title，对应数据库字段Title
        /// </summary>
        public string Title
        {
            get
            {
                return this.m_Title;
            }
            set
            {
                this.m_Title = value;
            }
        }
        
        /// <summary>
        /// 属性CustomerID，对应数据库字段CustomerID
        /// </summary>
        public int CustomerID
        {
            get
            {
                return this.m_CustomerID;
            }
            set
            {
                this.m_CustomerID = value;
            }
        }
        
        /// <summary>
        /// 属性TownID，对应数据库字段TownID
        /// </summary>
        public int TownID
        {
            get
            {
                return this.m_TownID;
            }
            set
            {
                this.m_TownID = value;
            }
        }
        
        /// <summary>
        /// 属性VillageID，对应数据库字段VillageID
        /// </summary>
        public int VillageID
        {
            get
            {
                return this.m_VillageID;
            }
            set
            {
                this.m_VillageID = value;
            }
        }
        
        /// <summary>
        /// 属性Status，对应数据库字段Status
        /// </summary>
        public int Status
        {
            get
            {
                return this.m_Status;
            }
            set
            {
                this.m_Status = value;
            }
        }
        
        /// <summary>
        /// 属性FileType，对应数据库字段FileType
        /// </summary>
        public string FileType
        {
            get
            {
                return this.m_FileType;
            }
            set
            {
                this.m_FileType = value;
            }
        }
        
        /// <summary>
        /// 属性FileUrl，对应数据库字段FileUrl
        /// </summary>
        public string FileUrl
        {
            get
            {
                return this.m_FileUrl;
            }
            set
            {
                this.m_FileUrl = value;
            }
        }
        public string FileSUrl
        {
            get
            {
                return this.m_FileSUrl;
            }
            set
            {
                this.m_FileSUrl = value;
            }
        }
        public string LinkUrl
        {
            get
            {
                return this.m_LinkUrl;
            }
            set
            {
                this.m_LinkUrl = value;
            }
        }
        /// <summary>
        /// 属性FileRmark，对应数据库字段FileRmark
        /// </summary>
        public string FileRmark
        {
            get
            {
                return this.m_FileRmark;
            }
            set
            {
                this.m_FileRmark = value;
            }
        }
        
        /// <summary>
        /// 属性OrderValue，对应数据库字段OrderValue
        /// </summary>
        public int OrderValue
        {
            get
            {
                return this.m_OrderValue;
            }
            set
            {
                this.m_OrderValue = value;
            }
        }
        
        /// <summary>
        /// 属性CreatorID，对应数据库字段CreatorID
        /// </summary>
        public int CreatorID
        {
            get
            {
                return this.m_CreatorID;
            }
            set
            {
                this.m_CreatorID = value;
            }
        }
        
        /// <summary>
        /// 属性CreateDate，对应数据库字段CreateDate
        /// </summary>
        public System.DateTime CreateDate
        {
            get
            {
                return this.m_CreateDate;
            }
            set
            {
                this.m_CreateDate = value;
            }
        }
        
        /// <summary>
        /// 属性Modifier，对应数据库字段Modifier
        /// </summary>
        public int Modifier
        {
            get
            {
                return this.m_Modifier;
            }
            set
            {
                this.m_Modifier = value;
            }
        }
        
        /// <summary>
        /// 属性ModifyDate，对应数据库字段ModifyDate
        /// </summary>
        public System.DateTime ModifyDate
        {
            get
            {
                return this.m_ModifyDate;
            }
            set
            {
                this.m_ModifyDate = value;
            }
        }
        
        /// <summary>
        /// 静态方法，根据主键来获取实体,如果没有获取到则返回null
        /// </summary>
        public static webbeautifulvillageFileEntity GetEntityByPrimaryKey(int AutoID)
        {
            webbeautifulvillageFileEntity obj = new webbeautifulvillageFileEntity();
            obj.AutoID=AutoID;
            obj.Retrieve();
            if (obj.IsPersistent)
            {
                return obj;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// 重新OnEuqal方法，通过主键来判断
        /// </summary>
        public override bool Equals(object obj)
        {
            if ((obj == null) || !(obj is webbeautifulvillageFileEntity))
            {
                return false;
            }
            webbeautifulvillageFileEntity tmpObj = (webbeautifulvillageFileEntity)obj;
            if ((this.m_AutoID == tmpObj.m_AutoID))
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        
        /// <summary>
        /// 重新GetHashCode方法，主键的Hash值累积
        /// </summary>
        public override int GetHashCode()
        {
             return this.m_AutoID.GetHashCode();
        }
        
        /// <summary>
        /// 表字段结构，封装了实体对应数据表的所有字段
        /// </summary>
        public struct Columns
        {
            
            /// <summary>
            /// 表字段AutoID
            /// </summary>
            public const string AutoID = "AutoID";
            
            /// <summary>
            /// 表字段Title
            /// </summary>
            public const string Title = "Title";
            
            /// <summary>
            /// 表字段CustomerID
            /// </summary>
            public const string CustomerID = "CustomerID";
            
            /// <summary>
            /// 表字段TownID
            /// </summary>
            public const string TownID = "TownID";
            
            /// <summary>
            /// 表字段VillageID
            /// </summary>
            public const string VillageID = "VillageID";
            
            /// <summary>
            /// 表字段Status
            /// </summary>
            public const string Status = "Status";
            
            /// <summary>
            /// 表字段FileType
            /// </summary>
            public const string FileType = "FileType";
            
            /// <summary>
            /// 表字段FileUrl
            /// </summary>
            public const string FileUrl = "FileUrl";
            public const string LinkUrl = "LinkUrl";
            public const string FileSUrl = "FileSUrl";
            /// <summary>
            /// 表字段FileRmark
            /// </summary>
            public const string FileRmark = "FileRmark";
            
            /// <summary>
            /// 表字段OrderValue
            /// </summary>
            public const string OrderValue = "OrderValue";
            
            /// <summary>
            /// 表字段CreatorID
            /// </summary>
            public const string CreatorID = "CreatorID";
            
            /// <summary>
            /// 表字段CreateDate
            /// </summary>
            public const string CreateDate = "CreateDate";
            
            /// <summary>
            /// 表字段Modifier
            /// </summary>
            public const string Modifier = "Modifier";
            
            /// <summary>
            /// 表字段ModifyDate
            /// </summary>
            public const string ModifyDate = "ModifyDate";
        }
    }
}
